// Generated by CoffeeScript 1.6.3
/*
# Welcome to the new js2coffee 2.0, now
# rewritten to use the esprima parser.
# try it out!
*/


(function() {
  var Clock, GraphicsController, LowerThird,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  GraphicsController = (function() {
    function GraphicsController() {
      this.poll = __bind(this.poll, this);
      var that;
      that = this;
      this.currentData = {};
      this.poll();
      setInterval((function() {
        return that.poll();
      }), 1000);
      setInterval((function() {
        return $(window).trigger('tick');
      }), 500);
    }

    GraphicsController.prototype.poll = function() {
      var pollUrl,
        _this = this;
      pollUrl = 'http://localhost:27015/data.json';
      $.ajax(pollUrl, {
        timeout: 15000,
        success: function(data) {
          if (!data) {
            console.log("No data received");
            return;
          }
          _this.currentData = data;
          clock.update(_this.currentData.clock);
          lowerThird.update(_this.currentData.lowerThird);
        }
      });
    };

    return GraphicsController;

  })();

  Clock = (function() {
    function Clock() {
      this.update = __bind(this.update, this);
      this.tick = __bind(this.tick, this);
      this.properties = {
        Visible: true,
        Offset: 0
      };
      $(window).bind('tick', this.tick);
    }

    Clock.prototype.tick = function() {
      var currentHours, currentMinutes, currentSeconds, d;
      d = new Date();
      currentMinutes = d.getMinutes();
      currentSeconds = d.getSeconds();
      currentHours = Number(d.getHours()) + Number(this.properties.Offset);
      if (currentMinutes.toString().length === 1) {
        currentMinutes = "0" + currentMinutes;
      }
      if (currentSeconds.toString().length === 1) {
        currentSeconds = "0" + currentSeconds;
      }
      return $('#clock').html(currentHours + ':' + currentMinutes + ':' + currentSeconds);
    };

    Clock.prototype.update = function(widget) {
      this.properties = widget;
      this.properties.Visible = widget.Visible === 'true' ? true : false;
      return $('#clock').toggleClass('hide', !this.properties.Visible);
    };

    return Clock;

  })();

  LowerThird = (function() {
    function LowerThird() {
      this.update = __bind(this.update, this);
      this.properties = {
        Visible: true,
        Name: "Name goes here",
        Title: "CEO",
        Company: "Stream My Event"
      };
    }

    LowerThird.prototype.update = function(widget) {
      this.properties = widget;
      this.properties.Visible = widget.Visible === 'true' ? true : false;
      $('#lowerThird').toggleClass('hide', !this.properties.Visible);
      $('#lowerThird #name').text(this.properties.Name);
      $('#lowerThird #function').text(this.properties.Title);
      return $('#lowerThird #company').text(this.properties.Company);
    };

    return LowerThird;

  })();

  window.controller = new GraphicsController();

  window.clock = new Clock();

  window.lowerThird = new LowerThird();

}).call(this);
